<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.javen.dao.UserDao" >
  <resultMap id="BaseResultMap" type="com.javen.model.User" >
    <id      column="id"        property="id"        jdbcType="INTEGER" />
    <result  column="userName"  property="userName"  jdbcType="VARCHAR" />
    <result  column="password"  property="password"  jdbcType="VARCHAR" />
    <result  column="phoneNumber"  property="phoneNumber"  jdbcType="VARCHAR" />
    <result  column="idCard"  property="idCard"  jdbcType="VARCHAR" />
    <result  column="bookedRoom"  property="bookedRoom"  jdbcType="VARCHAR" />
    <result  column="havaTime"  property="havaTime"  jdbcType="VARCHAR" />
    <result  column="roomTime"  property="roomTime"  jdbcType="VARCHAR" />
    <result  column="endTime"  property="endTime"  jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
   	id,userName,password,phoneNumber,idCard,bookedRoom,havaTime,roomTime,endTime
  </sql>
  
  <select id="selectAll" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select 
    <include refid="Base_Column_List" />
    from user
    limit #{0},#{1};
  </select>
  
   <select id="loginUser" resultMap="BaseResultMap" parameterType="com.javen.model.User">
    select 
    <include refid="Base_Column_List" />
    from user
    where phoneNumber = #{phoneNumber,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR};
  </select>

   <delete id="deleteById"  parameterType="java.lang.Integer">
    delete from user
    where bookedRoom is null and id = #{id,jdbcType=INTEGER}
  </delete>
  
   <insert id="signUp" parameterType="com.javen.model.User" >
    insert into user (userName, password,phoneNumber,idCard)
    values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR})
   </insert>
  
   <update id="updateById"  parameterType="com.javen.model.User" >
    update user
    set userName = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phoneNumber = #{phoneNumber,jdbcType=VARCHAR},
      idCard = #{idCard,jdbcType=VARCHAR}
      where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectCount" resultType="java.lang.Integer">
    select 
    count(*)
    from user
  </select>
  
  <update id="updateOut"  parameterType="java.lang.String" >
    update user
    set bookedRoom = null,
      havaTime = null,
      roomTime = null,
      endTime = null
    <![CDATA[where endTime < #{0}]]>;
    update room
    set roomState = 0,
      userName = null,
      phoneNumber = null,
      idCard = null,
      roomTime = null,
      endTime = null,
      haveTime = null
    <![CDATA[where endTime < #{0}]]>;
  </update>

</mapper>